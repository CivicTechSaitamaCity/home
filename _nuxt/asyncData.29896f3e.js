import{R as P,C as y,af as x,ag as _,E as b,I as w,y as C}from"./app.config.322dcdae.js";import{c as D}from"./entry.2c2ac255.js";const O=()=>null;function M(...i){var h;const l=typeof i[i.length-1]=="string"?i.pop():void 0;typeof i[0]!="string"&&i.unshift(l);let[t,f,a={}]=i;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof f!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");a.server=a.server??!0,a.default=a.default??O,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0;const e=P(),u=()=>e.isHydrating?e.payload.data[t]:e.static.data[t],d=()=>u()!==void 0;e._asyncData[t]||(e._asyncData[t]={data:y(u()??((h=a.default)==null?void 0:h.call(a))??null),pending:y(!d()),error:y(e.payload._errors[t]?D(e.payload._errors[t]):null)});const n={...e._asyncData[t]};n.refresh=n.execute=(s={})=>{if(e._asyncDataPromises[t]){if(s.dedupe===!1)return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(s._initial&&d())return u();n.pending.value=!0;const o=new Promise((r,c)=>{try{r(f(e))}catch(g){c(g)}}).then(r=>{if(o.cancelled)return e._asyncDataPromises[t];a.transform&&(r=a.transform(r)),a.pick&&(r=k(r,a.pick)),n.data.value=r,n.error.value=null}).catch(r=>{var c;if(o.cancelled)return e._asyncDataPromises[t];n.error.value=r,n.data.value=w(((c=a.default)==null?void 0:c.call(a))??null)}).finally(()=>{o.cancelled||(n.pending.value=!1,e.payload.data[t]=n.data.value,n.error.value&&(e.payload._errors[t]=D(n.error.value)),delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=o,e._asyncDataPromises[t]};const m=()=>n.refresh({_initial:!0}),v=a.server!==!1&&e.payload.serverRendered;{const s=C();if(s&&!s._nuxtOnBeforeMountCbs){s._nuxtOnBeforeMountCbs=[];const r=s._nuxtOnBeforeMountCbs;s&&(x(()=>{r.forEach(c=>{c()}),r.splice(0,r.length)}),_(()=>r.splice(0,r.length)))}v&&e.isHydrating&&d()?n.pending.value=!1:s&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?s._nuxtOnBeforeMountCbs.push(m):a.immediate&&m(),a.watch&&b(a.watch,()=>n.refresh());const o=e.hook("app:data:refresh",r=>{if(!r||r.includes(t))return n.refresh()});s&&_(o)}const p=Promise.resolve(e._asyncDataPromises[t]).then(()=>n);return Object.assign(p,n),p}function k(i,l){const t={};for(const f of l)t[f]=i[f];return t}export{M as u};
